services:
  - postgresql
  - xvfb
  - docker

environment:
  global:
    POSTGRES_PATH: C:\Program Files\PostgreSQL\9.6
    POSTGRES_PORT: tcp://localhost:5432
    POSTGRES_ENV_POSTGRES_USER: postgres
    POSTGRES_ENV_POSTGRES_PASSWORD: postgres
    POSTGRES_ENV_POSTGRES_DB: mercury
    PGUSER: postgres
    PGPASSWORD: Password12!

  matrix:
    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.0"
      PYTHON_ARCH: "32"

init:
  - ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%
  - SET PATH=C:\Program Files\PostgreSQL\9.6\bin\;%PATH%

install:
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - "SET PATH=%POSTGRES_PATH%\\bin;%PATH%"
  - "python --version"
  - docker pull grafana/grafana
  - docker run -d -p 3000:3000 --name grafana grafana/grafana
  - docker logs grafana
  - docker ps -a
  - cat /etc/grafana/grafana.ini
  - pip install --upgrade pip
  - pip install -r requirements.txt
  - pip install -r test-requirements.txt
  - psql --version

build_script:
  - psql -c "create database mercury;"
  - echo $http_proxy
  - echo $https_proxy
  #- set
  # echo set
  #- set http_proxy=http://127.0.0.1:80
  #- set https_proxy=https://127.0.0.1:443
  #- echo $http_proxy
  #- echo $https_proxy
  #- python test_socket.py
  - python manage.py migrate
  - python manage.py collectstatic --noinput

test_script:
  - black --check --diff .
  - flake8 .
  - coverage run manage.py test mercury.tests.test_gf_configs.TestGFConfig.test_config_post_event_exists_dashboard_created

after_test:
  - coveralls
  - cat geckodriver.log

on_failure:
  - docker logs grafana